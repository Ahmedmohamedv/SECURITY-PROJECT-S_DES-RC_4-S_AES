<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCACuAQQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxmiiigAooooAKKMUoFACUYp5WnKtOwrkeKULzU6INwDY6090Q
        ZxgmnYnnK5SlVDVuFYyG3Y6ccdaRYwelVykOZV20beanMeGNM25bilYfMM284pWXFP2+xpMDvRYLjY1U
        t82OlJt5qTaARkjpUkapgb8YHt1p2uFyvtppWrJVA2AQeeuKYQC46Yo5QUiIqKQJzU8iDd8vSmumMZpN
        DUiArSYqdFBPbp3p22PeNx4zzijlHzFXFFWp0j819hUpnjApiohVslc9qXKPmIKKeVHFJtHrSsO42ijF
        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
</value>
  </data>
</root>